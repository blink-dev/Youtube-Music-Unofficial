<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Youtube_Music.ViewModels" 
                    xmlns:tb="clr-namespace:Hardcodet.Wpf.TaskbarNotification"
                    xmlns:styles="clr-namespace:Youtube_Music.Styles">

    <vm:NotifyIconViewModel x:Key="NotifyIconViewModel"/>

    <ControlTemplate x:Key="MenuItemTemplateDisabledHover" TargetType="MenuItem">
        <Border x:Name="TemplateRoot" TextElement.FontSize="12">
            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="TemplateRoot" Value="#606060"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MenuItemDisabledHover" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="0 1" />
        <Setter Property="Padding" Value="20 5"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource MenuItemTemplateDisabledHover}"/>
    </Style>
    
    
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
    -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu" Padding="0">
        <ContextMenu.Items>
            <MenuItem Style="{StaticResource MenuItemDisabledHover}" Margin="-10 0 0 0">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Path Data="{StaticResource YoutubeIcon}" Fill="Red" VerticalAlignment="Center" Margin="11 1 5 0"/>
                        <TextBlock Grid.Column="1" Text="Youtube Music" Foreground="#808080" VerticalAlignment="Center" TextElement.FontWeight="Medium"/>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Header="Show" Command="{Binding ShowWindowCommand}" Foreground="White" TextElement.FontWeight="Medium" TextElement.FontSize="14" FontFamily="Segoe UI"/>
            <MenuItem Header="Hide" Command="{Binding HideWindowCommand}" Foreground="White" TextElement.FontWeight="Medium" TextElement.FontSize="14" FontFamily="Segoe UI"/>
            <Separator/>
            <MenuItem Header="Close to tray" IsCheckable="True" IsChecked="{Binding CloseToTray, Mode=TwoWay}" 
                      Foreground="White" TextElement.FontWeight="Medium" TextElement.FontSize="14" FontFamily="Segoe UI"/>
            <Separator/>
            <MenuItem Header="Quit" Command="{Binding ExitApplicationCommand}" Foreground="White" TextElement.FontWeight="Medium" TextElement.FontSize="14" FontFamily="Segoe UI"/>
            <Separator Visibility="{Binding PlayButtonsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <MenuItem Visibility="{Binding PlayButtonsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Style="{StaticResource MenuItemDisabledHover}">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal" DataContext="{StaticResource MainViewModel}">
                        <Button Style="{StaticResource ModernButtonStyle}" Command="{Binding PreviousSongCommand}">
                            <Path Data="{StaticResource BackIcon}" />
                        </Button>
                        <Button Style="{StaticResource ModernButtonStyle}"
                                styles:ButtonProgressAssist.IsIndicatorVisible="False"
                                styles:ButtonProgressAssist.IsIndeterminate="True"
                                Command="{Binding StartPlaybackCommand}">
                            <Path Data="{Binding PlayPauseIcon}" />
                        </Button>
                        <Button Style="{StaticResource ModernButtonStyle}" Command="{Binding NextSongCommand}">
                            <Path Data="{StaticResource NextIcon}" />
                        </Button>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu.Items>
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="yt.ico"
                    ToolTipText="Youtube Music"
                    LeftClickCommand="{Binding ShowWindowCommand}"
                    NoLeftClickDelay="True"
                    ContextMenu="{StaticResource SysTrayMenu}"
                    DataContext="{StaticResource NotifyIconViewModel}"/>

</ResourceDictionary>