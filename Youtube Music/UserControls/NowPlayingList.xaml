<UserControl x:Class="Youtube_Music.UserControls.NowPlayingList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:models="clr-namespace:Youtube_Music.Models"
             xmlns:controls="clr-namespace:Youtube_Music.Controls" xmlns:viewmodels="clr-namespace:Youtube_Music.ViewModels" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             DataContext="{StaticResource MainViewModel}"
             d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}">
    
    <UserControl.Resources>
        <Storyboard x:Key="FadeInFromBottomBtn">
            <DoubleAnimation Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.2"/>
            <ThicknessAnimation Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="Margin" To="0 0 0 10" Duration="0:0:.2"/>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="IsHitTestVisible">
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeOutFromBottomBtn">
            <DoubleAnimation Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2"/>
            <ThicknessAnimation Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="Margin" To="0 0 0 -10" Duration="0:0:.3"/>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="IsHitTestVisible">
                <DiscreteBooleanKeyFrame Value="False" KeyTime="0"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="FadeInFromTopBtn">
            <DoubleAnimation Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.2"/>
            <ThicknessAnimation Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="Margin" To="0 10 0 0" Duration="0:0:.2"/>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="IsHitTestVisible">
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeOutFromTopBtn">
            <DoubleAnimation Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2"/>
            <ThicknessAnimation Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="Margin" To="0 0 0 0" Duration="0:0:.3"/>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ScrollToPlayingSongBtn" Storyboard.TargetProperty="IsHitTestVisible">
                <DiscreteBooleanKeyFrame Value="False" KeyTime="0"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <Grid Background="#303030">
        <controls:ProgressRing HorizontalAlignment="Center" VerticalAlignment="Center" Width="40" Height="40" 
                               Margin="0 -30 0 0"
                               Visibility="{Binding NowPlaying.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        
        <controls:AnimatedScrollViewer ScrollChanged="Songs_ScrollChanged">
            <ListView x:Name="Songs" ItemsSource="{Binding NowPlaying.Songs, Mode=OneWay, IsAsync=True}" Style="{StaticResource PlaylistListView}"
                      SelectedItem="{Binding NowPlaying.SelectedSong, Mode=TwoWay}">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:YoutubeVideoInfo}">
                        <Grid MouseLeftButtonUp="Video_Click" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" Margin="5 9 15 0"/>
                            <TextBlock Grid.Row="1" Text="{Binding Artist}" Foreground="DarkGray" TextTrimming="CharacterEllipsis" VerticalAlignment="Bottom" Margin="5 0 15 9"/>
                            <Path Grid.Column="1" Grid.RowSpan="2" Stretch="Uniform" Fill="White" Data="{StaticResource PlayCircle}"
                                  Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Center" Text="{Binding Duration}" Margin="15 0"/>
                            <Grid.ContextMenu>
                                <ContextMenu DataContext="{StaticResource MainViewModel}">
                                    <MenuItem Header="Download" Command="{Binding DownloadCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                                    <MenuItem Header="Copy link" Command="{Binding CopyLinkCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                                    <MenuItem Header="Generate playlist" Command="{Binding GeneratePlaylistCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                              ToolTip="Generate random playlist based on this song"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </controls:AnimatedScrollViewer>
        <Button x:Name="ScrollToPlayingSongBtn" Grid.Row="1" Style="{StaticResource ModernButtonStyle}" Click="ScrollToPlayingSong_Click" 
                BorderBrush="#505050" BorderThickness="1"
                Opacity="0"
                ToolTip="Scroll to playing song">
            <Path x:Name="ScrollBtnPathIcon"/>
        </Button>
    </Grid>
</UserControl>
